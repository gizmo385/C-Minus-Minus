Terminals which are not used

   AND
   OR
   TEXT
   SPACE
   WITH_ELSE


Grammar

    0 $accept: prog $end

    1 prog: decl prog
    2     | func prog
    3     | epsilon

    4 decl: type var_decl_list SEMICOLON
    5     | type name_args_lists SEMICOLON
    6     | VOID name_args_lists SEMICOLON
    7     | EXTERN type name_args_lists SEMICOLON
    8     | EXTERN VOID name_args_lists SEMICOLON
    9     | error SEMICOLON

   10 func: type ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET
   11     | VOID ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET
   12     | error RIGHT_CURLY_BRACKET

   13 stmt: IF LEFT_PAREN expr RIGHT_PAREN stmt
   14     | IF LEFT_PAREN expr RIGHT_PAREN stmt ELSE stmt
   15     | WHILE LEFT_PAREN expr RIGHT_PAREN stmt
   16     | FOR LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt
   17     | RETURN optional_expr SEMICOLON
   18     | assg SEMICOLON
   19     | ID LEFT_PAREN expr_list RIGHT_PAREN SEMICOLON
   20     | LEFT_CURLY_BRACKET stmt_list RIGHT_CURLY_BRACKET
   21     | SEMICOLON
   22     | error SEMICOLON
   23     | error RIGHT_CURLY_BRACKET

   24 expr: MINUS expr
   25     | NOT expr
   26     | expr ADD expr
   27     | expr MINUS expr
   28     | expr MUL expr
   29     | expr DIV expr
   30     | expr EQ expr
   31     | expr NEQ expr
   32     | expr GTE expr
   33     | expr LTE expr
   34     | expr GT expr
   35     | expr LT expr
   36     | ID
   37     | ID LEFT_PAREN expr_list RIGHT_PAREN
   38     | ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   39     | LEFT_PAREN expr RIGHT_PAREN
   40     | INTCON
   41     | CHARCON
   42     | STRINGCON
   43     | error

   44 name_args_lists: ID LEFT_PAREN param_types RIGHT_PAREN
   45                | name_args_lists COMMA ID LEFT_PAREN param_types RIGHT_PAREN

   46 var_decl: ID
   47         | ID LEFT_SQUARE_BRACKET INTCON RIGHT_SQUARE_BRACKET

   48 var_decl_list: var_decl
   49              | var_decl_list COMMA var_decl
   50              | epsilon

   51 type: CHAR
   52     | INT

   53 param_types: VOID
   54            | param_types_list

   55 non_void_param_type: type ID
   56                    | type ID LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET

   57 param_types_list: non_void_param_type
   58                 | param_types_list COMMA non_void_param_type
   59                 | epsilon

   60 optional_var_decl_list: type var_decl_list SEMICOLON optional_var_decl_list
   61                       | epsilon

   62 optional_assign: assg
   63                | error
   64                | epsilon

   65 optional_expr: expr
   66              | epsilon

   67 stmt_list: stmt stmt_list
   68          | epsilon

   69 assg: ID ASSIGN expr
   70     | ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET ASSIGN expr

   71 expr_list: expr
   72          | expr_list COMMA expr
   73          | epsilon

   74 epsilon: /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256) 9 12 22 23 43 63
WHILE (258) 15
FOR (259) 16
INT (260) 52
CHAR (261) 51
VOID (262) 6 8 11 53
IF (263) 13 14
ELSE (264) 14
EXTERN (265) 7 8
RETURN (266) 17
COMMA (267) 45 49 58 72
SEMICOLON (268) 4 5 6 7 8 9 16 17 18 19 21 22 60
LEFT_PAREN (269) 10 11 13 14 15 16 19 37 39 44 45
RIGHT_PAREN (270) 10 11 13 14 15 16 19 37 39 44 45
LEFT_SQUARE_BRACKET (271) 38 47 56 70
RIGHT_SQUARE_BRACKET (272) 38 47 56 70
LEFT_CURLY_BRACKET (273) 10 11 20
RIGHT_CURLY_BRACKET (274) 10 11 12 20 23
EQ (275) 30
NEQ (276) 31
LTE (277) 33
LT (278) 35
GT (279) 34
GTE (280) 32
NOT (281) 25
AND (282)
OR (283)
ADD (284) 26
MINUS (285) 24 27
MUL (286) 28
DIV (287) 29
ASSIGN (288) 69 70
INTCON (289) 40 47
CHARCON (290) 41
STRINGCON (291) 42
ID (292) 10 11 19 36 37 38 44 45 46 47 55 56 69 70
TEXT (293)
SPACE (294)
WITHOUT_ELSE (295)
WITH_ELSE (296)
equality_op (297)
relop (298)
add_sub (299)
mul_div (300)
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
prog (48)
    on left: 1 2 3, on right: 0 1 2
decl (49)
    on left: 4 5 6 7 8 9, on right: 1
func (50)
    on left: 10 11 12, on right: 2
stmt (51)
    on left: 13 14 15 16 17 18 19 20 21 22 23, on right: 13 14 15 16
    67
expr (52)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43, on right: 13 14 15 24 25 26 27 28 29 30 31 32 33 34 35 38
    39 65 69 70 71 72
name_args_lists (53)
    on left: 44 45, on right: 5 6 7 8 45
var_decl (54)
    on left: 46 47, on right: 48 49
var_decl_list (55)
    on left: 48 49 50, on right: 4 49 60
type (56)
    on left: 51 52, on right: 4 5 7 10 55 56 60
param_types (57)
    on left: 53 54, on right: 10 11 44 45
non_void_param_type (58)
    on left: 55 56, on right: 57 58
param_types_list (59)
    on left: 57 58 59, on right: 54 58
optional_var_decl_list (60)
    on left: 60 61, on right: 10 11 60
optional_assign (61)
    on left: 62 63 64, on right: 16
optional_expr (62)
    on left: 65 66, on right: 16 17
stmt_list (63)
    on left: 67 68, on right: 10 11 20 67
assg (64)
    on left: 69 70, on right: 18 62
expr_list (65)
    on left: 71 72 73, on right: 19 37 72
epsilon (66)
    on left: 74, on right: 3 50 59 61 64 66 68 73


state 0

    0 $accept: . prog $end

    error   shift, and go to state 1
    INT     shift, and go to state 2
    CHAR    shift, and go to state 3
    VOID    shift, and go to state 4
    EXTERN  shift, and go to state 5

    $end  reduce using rule 74 (epsilon)

    prog     go to state 6
    decl     go to state 7
    func     go to state 8
    type     go to state 9
    epsilon  go to state 10


state 1

    9 decl: error . SEMICOLON
   12 func: error . RIGHT_CURLY_BRACKET

    SEMICOLON            shift, and go to state 11
    RIGHT_CURLY_BRACKET  shift, and go to state 12


state 2

   52 type: INT .

    $default  reduce using rule 52 (type)


state 3

   51 type: CHAR .

    $default  reduce using rule 51 (type)


state 4

    6 decl: VOID . name_args_lists SEMICOLON
   11 func: VOID . ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET

    ID  shift, and go to state 13

    name_args_lists  go to state 14


state 5

    7 decl: EXTERN . type name_args_lists SEMICOLON
    8     | EXTERN . VOID name_args_lists SEMICOLON

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3
    VOID  shift, and go to state 15

    type  go to state 16


state 6

    0 $accept: prog . $end

    $end  shift, and go to state 17


state 7

    1 prog: decl . prog

    error   shift, and go to state 1
    INT     shift, and go to state 2
    CHAR    shift, and go to state 3
    VOID    shift, and go to state 4
    EXTERN  shift, and go to state 5

    $end  reduce using rule 74 (epsilon)

    prog     go to state 18
    decl     go to state 7
    func     go to state 8
    type     go to state 9
    epsilon  go to state 10


state 8

    2 prog: func . prog

    error   shift, and go to state 1
    INT     shift, and go to state 2
    CHAR    shift, and go to state 3
    VOID    shift, and go to state 4
    EXTERN  shift, and go to state 5

    $end  reduce using rule 74 (epsilon)

    prog     go to state 19
    decl     go to state 7
    func     go to state 8
    type     go to state 9
    epsilon  go to state 10


state 9

    4 decl: type . var_decl_list SEMICOLON
    5     | type . name_args_lists SEMICOLON
   10 func: type . ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET

    ID  shift, and go to state 20

    $default  reduce using rule 74 (epsilon)

    name_args_lists  go to state 21
    var_decl         go to state 22
    var_decl_list    go to state 23
    epsilon          go to state 24


state 10

    3 prog: epsilon .

    $default  reduce using rule 3 (prog)


state 11

    9 decl: error SEMICOLON .

    $default  reduce using rule 9 (decl)


state 12

   12 func: error RIGHT_CURLY_BRACKET .

    $default  reduce using rule 12 (func)


state 13

   11 func: VOID ID . LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET
   44 name_args_lists: ID . LEFT_PAREN param_types RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 25


state 14

    6 decl: VOID name_args_lists . SEMICOLON
   45 name_args_lists: name_args_lists . COMMA ID LEFT_PAREN param_types RIGHT_PAREN

    COMMA      shift, and go to state 26
    SEMICOLON  shift, and go to state 27


state 15

    8 decl: EXTERN VOID . name_args_lists SEMICOLON

    ID  shift, and go to state 28

    name_args_lists  go to state 29


state 16

    7 decl: EXTERN type . name_args_lists SEMICOLON

    ID  shift, and go to state 28

    name_args_lists  go to state 30


state 17

    0 $accept: prog $end .

    $default  accept


state 18

    1 prog: decl prog .

    $default  reduce using rule 1 (prog)


state 19

    2 prog: func prog .

    $default  reduce using rule 2 (prog)


state 20

   10 func: type ID . LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET
   44 name_args_lists: ID . LEFT_PAREN param_types RIGHT_PAREN
   46 var_decl: ID .
   47         | ID . LEFT_SQUARE_BRACKET INTCON RIGHT_SQUARE_BRACKET

    LEFT_PAREN           shift, and go to state 31
    LEFT_SQUARE_BRACKET  shift, and go to state 32

    $default  reduce using rule 46 (var_decl)


state 21

    5 decl: type name_args_lists . SEMICOLON
   45 name_args_lists: name_args_lists . COMMA ID LEFT_PAREN param_types RIGHT_PAREN

    COMMA      shift, and go to state 26
    SEMICOLON  shift, and go to state 33


state 22

   48 var_decl_list: var_decl .

    $default  reduce using rule 48 (var_decl_list)


state 23

    4 decl: type var_decl_list . SEMICOLON
   49 var_decl_list: var_decl_list . COMMA var_decl

    COMMA      shift, and go to state 34
    SEMICOLON  shift, and go to state 35


state 24

   50 var_decl_list: epsilon .

    $default  reduce using rule 50 (var_decl_list)


state 25

   11 func: VOID ID LEFT_PAREN . param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET
   44 name_args_lists: ID LEFT_PAREN . param_types RIGHT_PAREN

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3
    VOID  shift, and go to state 36

    $default  reduce using rule 74 (epsilon)

    type                 go to state 37
    param_types          go to state 38
    non_void_param_type  go to state 39
    param_types_list     go to state 40
    epsilon              go to state 41


state 26

   45 name_args_lists: name_args_lists COMMA . ID LEFT_PAREN param_types RIGHT_PAREN

    ID  shift, and go to state 42


state 27

    6 decl: VOID name_args_lists SEMICOLON .

    $default  reduce using rule 6 (decl)


state 28

   44 name_args_lists: ID . LEFT_PAREN param_types RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 43


state 29

    8 decl: EXTERN VOID name_args_lists . SEMICOLON
   45 name_args_lists: name_args_lists . COMMA ID LEFT_PAREN param_types RIGHT_PAREN

    COMMA      shift, and go to state 26
    SEMICOLON  shift, and go to state 44


state 30

    7 decl: EXTERN type name_args_lists . SEMICOLON
   45 name_args_lists: name_args_lists . COMMA ID LEFT_PAREN param_types RIGHT_PAREN

    COMMA      shift, and go to state 26
    SEMICOLON  shift, and go to state 45


state 31

   10 func: type ID LEFT_PAREN . param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET
   44 name_args_lists: ID LEFT_PAREN . param_types RIGHT_PAREN

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3
    VOID  shift, and go to state 36

    $default  reduce using rule 74 (epsilon)

    type                 go to state 37
    param_types          go to state 46
    non_void_param_type  go to state 39
    param_types_list     go to state 40
    epsilon              go to state 41


state 32

   47 var_decl: ID LEFT_SQUARE_BRACKET . INTCON RIGHT_SQUARE_BRACKET

    INTCON  shift, and go to state 47


state 33

    5 decl: type name_args_lists SEMICOLON .

    $default  reduce using rule 5 (decl)


state 34

   49 var_decl_list: var_decl_list COMMA . var_decl

    ID  shift, and go to state 48

    var_decl  go to state 49


state 35

    4 decl: type var_decl_list SEMICOLON .

    $default  reduce using rule 4 (decl)


state 36

   53 param_types: VOID .

    $default  reduce using rule 53 (param_types)


state 37

   55 non_void_param_type: type . ID
   56                    | type . ID LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET

    ID  shift, and go to state 50


state 38

   11 func: VOID ID LEFT_PAREN param_types . RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET
   44 name_args_lists: ID LEFT_PAREN param_types . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 51


state 39

   57 param_types_list: non_void_param_type .

    $default  reduce using rule 57 (param_types_list)


state 40

   54 param_types: param_types_list .
   58 param_types_list: param_types_list . COMMA non_void_param_type

    COMMA  shift, and go to state 52

    $default  reduce using rule 54 (param_types)


state 41

   59 param_types_list: epsilon .

    $default  reduce using rule 59 (param_types_list)


state 42

   45 name_args_lists: name_args_lists COMMA ID . LEFT_PAREN param_types RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 53


state 43

   44 name_args_lists: ID LEFT_PAREN . param_types RIGHT_PAREN

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3
    VOID  shift, and go to state 36

    $default  reduce using rule 74 (epsilon)

    type                 go to state 37
    param_types          go to state 54
    non_void_param_type  go to state 39
    param_types_list     go to state 40
    epsilon              go to state 41


state 44

    8 decl: EXTERN VOID name_args_lists SEMICOLON .

    $default  reduce using rule 8 (decl)


state 45

    7 decl: EXTERN type name_args_lists SEMICOLON .

    $default  reduce using rule 7 (decl)


state 46

   10 func: type ID LEFT_PAREN param_types . RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET
   44 name_args_lists: ID LEFT_PAREN param_types . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 55


state 47

   47 var_decl: ID LEFT_SQUARE_BRACKET INTCON . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 56


state 48

   46 var_decl: ID .
   47         | ID . LEFT_SQUARE_BRACKET INTCON RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 32

    $default  reduce using rule 46 (var_decl)


state 49

   49 var_decl_list: var_decl_list COMMA var_decl .

    $default  reduce using rule 49 (var_decl_list)


state 50

   55 non_void_param_type: type ID .
   56                    | type ID . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 55 (non_void_param_type)


state 51

   11 func: VOID ID LEFT_PAREN param_types RIGHT_PAREN . LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET
   44 name_args_lists: ID LEFT_PAREN param_types RIGHT_PAREN .

    LEFT_CURLY_BRACKET  shift, and go to state 58

    $default  reduce using rule 44 (name_args_lists)


state 52

   58 param_types_list: param_types_list COMMA . non_void_param_type

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    type                 go to state 37
    non_void_param_type  go to state 59


state 53

   45 name_args_lists: name_args_lists COMMA ID LEFT_PAREN . param_types RIGHT_PAREN

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3
    VOID  shift, and go to state 36

    $default  reduce using rule 74 (epsilon)

    type                 go to state 37
    param_types          go to state 60
    non_void_param_type  go to state 39
    param_types_list     go to state 40
    epsilon              go to state 41


state 54

   44 name_args_lists: ID LEFT_PAREN param_types . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 61


state 55

   10 func: type ID LEFT_PAREN param_types RIGHT_PAREN . LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET
   44 name_args_lists: ID LEFT_PAREN param_types RIGHT_PAREN .

    LEFT_CURLY_BRACKET  shift, and go to state 62

    $default  reduce using rule 44 (name_args_lists)


state 56

   47 var_decl: ID LEFT_SQUARE_BRACKET INTCON RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 47 (var_decl)


state 57

   56 non_void_param_type: type ID LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 63


state 58

   11 func: VOID ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET . optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 74 (epsilon)

    type                    go to state 64
    optional_var_decl_list  go to state 65
    epsilon                 go to state 66


state 59

   58 param_types_list: param_types_list COMMA non_void_param_type .

    $default  reduce using rule 58 (param_types_list)


state 60

   45 name_args_lists: name_args_lists COMMA ID LEFT_PAREN param_types . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 67


state 61

   44 name_args_lists: ID LEFT_PAREN param_types RIGHT_PAREN .

    $default  reduce using rule 44 (name_args_lists)


state 62

   10 func: type ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET . optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 74 (epsilon)

    type                    go to state 64
    optional_var_decl_list  go to state 68
    epsilon                 go to state 66


state 63

   56 non_void_param_type: type ID LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 56 (non_void_param_type)


state 64

   60 optional_var_decl_list: type . var_decl_list SEMICOLON optional_var_decl_list

    ID  shift, and go to state 48

    $default  reduce using rule 74 (epsilon)

    var_decl       go to state 22
    var_decl_list  go to state 69
    epsilon        go to state 24


state 65

   11 func: VOID ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list . stmt_list RIGHT_CURLY_BRACKET

    error               shift, and go to state 70
    WHILE               shift, and go to state 71
    FOR                 shift, and go to state 72
    IF                  shift, and go to state 73
    RETURN              shift, and go to state 74
    SEMICOLON           shift, and go to state 75
    LEFT_CURLY_BRACKET  shift, and go to state 76
    ID                  shift, and go to state 77

    RIGHT_CURLY_BRACKET  reduce using rule 74 (epsilon)

    stmt       go to state 78
    stmt_list  go to state 79
    assg       go to state 80
    epsilon    go to state 81


state 66

   61 optional_var_decl_list: epsilon .

    $default  reduce using rule 61 (optional_var_decl_list)


state 67

   45 name_args_lists: name_args_lists COMMA ID LEFT_PAREN param_types RIGHT_PAREN .

    $default  reduce using rule 45 (name_args_lists)


state 68

   10 func: type ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list . stmt_list RIGHT_CURLY_BRACKET

    error               shift, and go to state 70
    WHILE               shift, and go to state 71
    FOR                 shift, and go to state 72
    IF                  shift, and go to state 73
    RETURN              shift, and go to state 74
    SEMICOLON           shift, and go to state 75
    LEFT_CURLY_BRACKET  shift, and go to state 76
    ID                  shift, and go to state 77

    RIGHT_CURLY_BRACKET  reduce using rule 74 (epsilon)

    stmt       go to state 78
    stmt_list  go to state 82
    assg       go to state 80
    epsilon    go to state 81


state 69

   49 var_decl_list: var_decl_list . COMMA var_decl
   60 optional_var_decl_list: type var_decl_list . SEMICOLON optional_var_decl_list

    COMMA      shift, and go to state 34
    SEMICOLON  shift, and go to state 83


state 70

   22 stmt: error . SEMICOLON
   23     | error . RIGHT_CURLY_BRACKET

    SEMICOLON            shift, and go to state 84
    RIGHT_CURLY_BRACKET  shift, and go to state 85


state 71

   15 stmt: WHILE . LEFT_PAREN expr RIGHT_PAREN stmt

    LEFT_PAREN  shift, and go to state 86


state 72

   16 stmt: FOR . LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt

    LEFT_PAREN  shift, and go to state 87


state 73

   13 stmt: IF . LEFT_PAREN expr RIGHT_PAREN stmt
   14     | IF . LEFT_PAREN expr RIGHT_PAREN stmt ELSE stmt

    LEFT_PAREN  shift, and go to state 88


state 74

   17 stmt: RETURN . optional_expr SEMICOLON

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    SEMICOLON  reduce using rule 74 (epsilon)

    expr           go to state 97
    optional_expr  go to state 98
    epsilon        go to state 99


state 75

   21 stmt: SEMICOLON .

    $default  reduce using rule 21 (stmt)


state 76

   20 stmt: LEFT_CURLY_BRACKET . stmt_list RIGHT_CURLY_BRACKET

    error               shift, and go to state 70
    WHILE               shift, and go to state 71
    FOR                 shift, and go to state 72
    IF                  shift, and go to state 73
    RETURN              shift, and go to state 74
    SEMICOLON           shift, and go to state 75
    LEFT_CURLY_BRACKET  shift, and go to state 76
    ID                  shift, and go to state 77

    RIGHT_CURLY_BRACKET  reduce using rule 74 (epsilon)

    stmt       go to state 78
    stmt_list  go to state 100
    assg       go to state 80
    epsilon    go to state 81


state 77

   19 stmt: ID . LEFT_PAREN expr_list RIGHT_PAREN SEMICOLON
   69 assg: ID . ASSIGN expr
   70     | ID . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET ASSIGN expr

    LEFT_PAREN           shift, and go to state 101
    LEFT_SQUARE_BRACKET  shift, and go to state 102
    ASSIGN               shift, and go to state 103


state 78

   67 stmt_list: stmt . stmt_list

    error               shift, and go to state 70
    WHILE               shift, and go to state 71
    FOR                 shift, and go to state 72
    IF                  shift, and go to state 73
    RETURN              shift, and go to state 74
    SEMICOLON           shift, and go to state 75
    LEFT_CURLY_BRACKET  shift, and go to state 76
    ID                  shift, and go to state 77

    RIGHT_CURLY_BRACKET  reduce using rule 74 (epsilon)

    stmt       go to state 78
    stmt_list  go to state 104
    assg       go to state 80
    epsilon    go to state 81


state 79

   11 func: VOID ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 105


state 80

   18 stmt: assg . SEMICOLON

    SEMICOLON  shift, and go to state 106


state 81

   68 stmt_list: epsilon .

    $default  reduce using rule 68 (stmt_list)


state 82

   10 func: type ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 107


state 83

   60 optional_var_decl_list: type var_decl_list SEMICOLON . optional_var_decl_list

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 74 (epsilon)

    type                    go to state 64
    optional_var_decl_list  go to state 108
    epsilon                 go to state 66


state 84

   22 stmt: error SEMICOLON .

    $default  reduce using rule 22 (stmt)


state 85

   23 stmt: error RIGHT_CURLY_BRACKET .

    $default  reduce using rule 23 (stmt)


state 86

   15 stmt: WHILE LEFT_PAREN . expr RIGHT_PAREN stmt

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 109


state 87

   16 stmt: FOR LEFT_PAREN . optional_assign SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt

    error  shift, and go to state 110
    ID     shift, and go to state 111

    SEMICOLON  reduce using rule 74 (epsilon)

    optional_assign  go to state 112
    assg             go to state 113
    epsilon          go to state 114


state 88

   13 stmt: IF LEFT_PAREN . expr RIGHT_PAREN stmt
   14     | IF LEFT_PAREN . expr RIGHT_PAREN stmt ELSE stmt

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 115


state 89

   43 expr: error .

    $default  reduce using rule 43 (expr)


state 90

   39 expr: LEFT_PAREN . expr RIGHT_PAREN

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 116


state 91

   25 expr: NOT . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 117


state 92

   24 expr: MINUS . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 118


state 93

   40 expr: INTCON .

    $default  reduce using rule 40 (expr)


state 94

   41 expr: CHARCON .

    $default  reduce using rule 41 (expr)


state 95

   42 expr: STRINGCON .

    $default  reduce using rule 42 (expr)


state 96

   36 expr: ID .
   37     | ID . LEFT_PAREN expr_list RIGHT_PAREN
   38     | ID . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET

    LEFT_PAREN           shift, and go to state 119
    LEFT_SQUARE_BRACKET  shift, and go to state 120

    $default  reduce using rule 36 (expr)


state 97

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr
   65 optional_expr: expr .

    EQ     shift, and go to state 121
    NEQ    shift, and go to state 122
    LTE    shift, and go to state 123
    LT     shift, and go to state 124
    GT     shift, and go to state 125
    GTE    shift, and go to state 126
    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 65 (optional_expr)


state 98

   17 stmt: RETURN optional_expr . SEMICOLON

    SEMICOLON  shift, and go to state 131


state 99

   66 optional_expr: epsilon .

    $default  reduce using rule 66 (optional_expr)


state 100

   20 stmt: LEFT_CURLY_BRACKET stmt_list . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 132


state 101

   19 stmt: ID LEFT_PAREN . expr_list RIGHT_PAREN SEMICOLON

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    COMMA        reduce using rule 74 (epsilon)
    RIGHT_PAREN  reduce using rule 74 (epsilon)

    expr       go to state 133
    expr_list  go to state 134
    epsilon    go to state 135


state 102

   70 assg: ID LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET ASSIGN expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 136


state 103

   69 assg: ID ASSIGN . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 137


state 104

   67 stmt_list: stmt stmt_list .

    $default  reduce using rule 67 (stmt_list)


state 105

   11 func: VOID ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET .

    $default  reduce using rule 11 (func)


state 106

   18 stmt: assg SEMICOLON .

    $default  reduce using rule 18 (stmt)


state 107

   10 func: type ID LEFT_PAREN param_types RIGHT_PAREN LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET .

    $default  reduce using rule 10 (func)


state 108

   60 optional_var_decl_list: type var_decl_list SEMICOLON optional_var_decl_list .

    $default  reduce using rule 60 (optional_var_decl_list)


state 109

   15 stmt: WHILE LEFT_PAREN expr . RIGHT_PAREN stmt
   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    RIGHT_PAREN  shift, and go to state 138
    EQ           shift, and go to state 121
    NEQ          shift, and go to state 122
    LTE          shift, and go to state 123
    LT           shift, and go to state 124
    GT           shift, and go to state 125
    GTE          shift, and go to state 126
    ADD          shift, and go to state 127
    MINUS        shift, and go to state 128
    MUL          shift, and go to state 129
    DIV          shift, and go to state 130


state 110

   63 optional_assign: error .

    $default  reduce using rule 63 (optional_assign)


state 111

   69 assg: ID . ASSIGN expr
   70     | ID . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET ASSIGN expr

    LEFT_SQUARE_BRACKET  shift, and go to state 102
    ASSIGN               shift, and go to state 103


state 112

   16 stmt: FOR LEFT_PAREN optional_assign . SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt

    SEMICOLON  shift, and go to state 139


state 113

   62 optional_assign: assg .

    $default  reduce using rule 62 (optional_assign)


state 114

   64 optional_assign: epsilon .

    $default  reduce using rule 64 (optional_assign)


state 115

   13 stmt: IF LEFT_PAREN expr . RIGHT_PAREN stmt
   14     | IF LEFT_PAREN expr . RIGHT_PAREN stmt ELSE stmt
   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    RIGHT_PAREN  shift, and go to state 140
    EQ           shift, and go to state 121
    NEQ          shift, and go to state 122
    LTE          shift, and go to state 123
    LT           shift, and go to state 124
    GT           shift, and go to state 125
    GTE          shift, and go to state 126
    ADD          shift, and go to state 127
    MINUS        shift, and go to state 128
    MUL          shift, and go to state 129
    DIV          shift, and go to state 130


state 116

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr
   39     | LEFT_PAREN expr . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 141
    EQ           shift, and go to state 121
    NEQ          shift, and go to state 122
    LTE          shift, and go to state 123
    LT           shift, and go to state 124
    GT           shift, and go to state 125
    GTE          shift, and go to state 126
    ADD          shift, and go to state 127
    MINUS        shift, and go to state 128
    MUL          shift, and go to state 129
    DIV          shift, and go to state 130


state 117

   25 expr: NOT expr .
   26     | expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    $default  reduce using rule 25 (expr)


state 118

   24 expr: MINUS expr .
   26     | expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    $default  reduce using rule 24 (expr)


state 119

   37 expr: ID LEFT_PAREN . expr_list RIGHT_PAREN

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    COMMA        reduce using rule 74 (epsilon)
    RIGHT_PAREN  reduce using rule 74 (epsilon)

    expr       go to state 133
    expr_list  go to state 142
    epsilon    go to state 135


state 120

   38 expr: ID LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 143


state 121

   30 expr: expr EQ . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 144


state 122

   31 expr: expr NEQ . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 145


state 123

   33 expr: expr LTE . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 146


state 124

   35 expr: expr LT . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 147


state 125

   34 expr: expr GT . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 148


state 126

   32 expr: expr GTE . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 149


state 127

   26 expr: expr ADD . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 150


state 128

   27 expr: expr MINUS . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 151


state 129

   28 expr: expr MUL . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 152


state 130

   29 expr: expr DIV . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 153


state 131

   17 stmt: RETURN optional_expr SEMICOLON .

    $default  reduce using rule 17 (stmt)


state 132

   20 stmt: LEFT_CURLY_BRACKET stmt_list RIGHT_CURLY_BRACKET .

    $default  reduce using rule 20 (stmt)


state 133

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr
   71 expr_list: expr .

    EQ     shift, and go to state 121
    NEQ    shift, and go to state 122
    LTE    shift, and go to state 123
    LT     shift, and go to state 124
    GT     shift, and go to state 125
    GTE    shift, and go to state 126
    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 71 (expr_list)


state 134

   19 stmt: ID LEFT_PAREN expr_list . RIGHT_PAREN SEMICOLON
   72 expr_list: expr_list . COMMA expr

    COMMA        shift, and go to state 154
    RIGHT_PAREN  shift, and go to state 155


state 135

   73 expr_list: epsilon .

    $default  reduce using rule 73 (expr_list)


state 136

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr
   70 assg: ID LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET ASSIGN expr

    RIGHT_SQUARE_BRACKET  shift, and go to state 156
    EQ                    shift, and go to state 121
    NEQ                   shift, and go to state 122
    LTE                   shift, and go to state 123
    LT                    shift, and go to state 124
    GT                    shift, and go to state 125
    GTE                   shift, and go to state 126
    ADD                   shift, and go to state 127
    MINUS                 shift, and go to state 128
    MUL                   shift, and go to state 129
    DIV                   shift, and go to state 130


state 137

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr
   69 assg: ID ASSIGN expr .

    EQ     shift, and go to state 121
    NEQ    shift, and go to state 122
    LTE    shift, and go to state 123
    LT     shift, and go to state 124
    GT     shift, and go to state 125
    GTE    shift, and go to state 126
    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 69 (assg)


state 138

   15 stmt: WHILE LEFT_PAREN expr RIGHT_PAREN . stmt

    error               shift, and go to state 70
    WHILE               shift, and go to state 71
    FOR                 shift, and go to state 72
    IF                  shift, and go to state 73
    RETURN              shift, and go to state 74
    SEMICOLON           shift, and go to state 75
    LEFT_CURLY_BRACKET  shift, and go to state 76
    ID                  shift, and go to state 77

    stmt  go to state 157
    assg  go to state 80


state 139

   16 stmt: FOR LEFT_PAREN optional_assign SEMICOLON . optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    SEMICOLON  reduce using rule 74 (epsilon)

    expr           go to state 97
    optional_expr  go to state 158
    epsilon        go to state 99


state 140

   13 stmt: IF LEFT_PAREN expr RIGHT_PAREN . stmt
   14     | IF LEFT_PAREN expr RIGHT_PAREN . stmt ELSE stmt

    error               shift, and go to state 70
    WHILE               shift, and go to state 71
    FOR                 shift, and go to state 72
    IF                  shift, and go to state 73
    RETURN              shift, and go to state 74
    SEMICOLON           shift, and go to state 75
    LEFT_CURLY_BRACKET  shift, and go to state 76
    ID                  shift, and go to state 77

    stmt  go to state 159
    assg  go to state 80


state 141

   39 expr: LEFT_PAREN expr RIGHT_PAREN .

    $default  reduce using rule 39 (expr)


state 142

   37 expr: ID LEFT_PAREN expr_list . RIGHT_PAREN
   72 expr_list: expr_list . COMMA expr

    COMMA        shift, and go to state 154
    RIGHT_PAREN  shift, and go to state 160


state 143

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr
   38     | ID LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 161
    EQ                    shift, and go to state 121
    NEQ                   shift, and go to state 122
    LTE                   shift, and go to state 123
    LT                    shift, and go to state 124
    GT                    shift, and go to state 125
    GTE                   shift, and go to state 126
    ADD                   shift, and go to state 127
    MINUS                 shift, and go to state 128
    MUL                   shift, and go to state 129
    DIV                   shift, and go to state 130


state 144

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   30     | expr EQ expr .
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    LTE    shift, and go to state 123
    LT     shift, and go to state 124
    GT     shift, and go to state 125
    GTE    shift, and go to state 126
    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 30 (expr)


state 145

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   31     | expr NEQ expr .
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    LTE    shift, and go to state 123
    LT     shift, and go to state 124
    GT     shift, and go to state 125
    GTE    shift, and go to state 126
    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 31 (expr)


state 146

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   33     | expr LTE expr .
   34     | expr . GT expr
   35     | expr . LT expr

    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 33 (expr)


state 147

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr
   35     | expr LT expr .

    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 35 (expr)


state 148

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   34     | expr GT expr .
   35     | expr . LT expr

    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 34 (expr)


state 149

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   32     | expr GTE expr .
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 32 (expr)


state 150

   26 expr: expr . ADD expr
   26     | expr ADD expr .
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    MUL  shift, and go to state 129
    DIV  shift, and go to state 130

    $default  reduce using rule 26 (expr)


state 151

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   27     | expr MINUS expr .
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    MUL  shift, and go to state 129
    DIV  shift, and go to state 130

    $default  reduce using rule 27 (expr)


state 152

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   28     | expr MUL expr .
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    $default  reduce using rule 28 (expr)


state 153

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   29     | expr DIV expr .
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr

    $default  reduce using rule 29 (expr)


state 154

   72 expr_list: expr_list COMMA . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 162


state 155

   19 stmt: ID LEFT_PAREN expr_list RIGHT_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 163


state 156

   70 assg: ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET . ASSIGN expr

    ASSIGN  shift, and go to state 164


state 157

   15 stmt: WHILE LEFT_PAREN expr RIGHT_PAREN stmt .

    $default  reduce using rule 15 (stmt)


state 158

   16 stmt: FOR LEFT_PAREN optional_assign SEMICOLON optional_expr . SEMICOLON optional_assign RIGHT_PAREN stmt

    SEMICOLON  shift, and go to state 165


state 159

   13 stmt: IF LEFT_PAREN expr RIGHT_PAREN stmt .
   14     | IF LEFT_PAREN expr RIGHT_PAREN stmt . ELSE stmt

    ELSE  shift, and go to state 166

    $default  reduce using rule 13 (stmt)


state 160

   37 expr: ID LEFT_PAREN expr_list RIGHT_PAREN .

    $default  reduce using rule 37 (expr)


state 161

   38 expr: ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 38 (expr)


state 162

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr
   72 expr_list: expr_list COMMA expr .

    EQ     shift, and go to state 121
    NEQ    shift, and go to state 122
    LTE    shift, and go to state 123
    LT     shift, and go to state 124
    GT     shift, and go to state 125
    GTE    shift, and go to state 126
    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 72 (expr_list)


state 163

   19 stmt: ID LEFT_PAREN expr_list RIGHT_PAREN SEMICOLON .

    $default  reduce using rule 19 (stmt)


state 164

   70 assg: ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET ASSIGN . expr

    error       shift, and go to state 89
    LEFT_PAREN  shift, and go to state 90
    NOT         shift, and go to state 91
    MINUS       shift, and go to state 92
    INTCON      shift, and go to state 93
    CHARCON     shift, and go to state 94
    STRINGCON   shift, and go to state 95
    ID          shift, and go to state 96

    expr  go to state 167


state 165

   16 stmt: FOR LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON . optional_assign RIGHT_PAREN stmt

    error  shift, and go to state 110
    ID     shift, and go to state 111

    RIGHT_PAREN  reduce using rule 74 (epsilon)

    optional_assign  go to state 168
    assg             go to state 113
    epsilon          go to state 114


state 166

   14 stmt: IF LEFT_PAREN expr RIGHT_PAREN stmt ELSE . stmt

    error               shift, and go to state 70
    WHILE               shift, and go to state 71
    FOR                 shift, and go to state 72
    IF                  shift, and go to state 73
    RETURN              shift, and go to state 74
    SEMICOLON           shift, and go to state 75
    LEFT_CURLY_BRACKET  shift, and go to state 76
    ID                  shift, and go to state 77

    stmt  go to state 169
    assg  go to state 80


state 167

   26 expr: expr . ADD expr
   27     | expr . MINUS expr
   28     | expr . MUL expr
   29     | expr . DIV expr
   30     | expr . EQ expr
   31     | expr . NEQ expr
   32     | expr . GTE expr
   33     | expr . LTE expr
   34     | expr . GT expr
   35     | expr . LT expr
   70 assg: ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET ASSIGN expr .

    EQ     shift, and go to state 121
    NEQ    shift, and go to state 122
    LTE    shift, and go to state 123
    LT     shift, and go to state 124
    GT     shift, and go to state 125
    GTE    shift, and go to state 126
    ADD    shift, and go to state 127
    MINUS  shift, and go to state 128
    MUL    shift, and go to state 129
    DIV    shift, and go to state 130

    $default  reduce using rule 70 (assg)


state 168

   16 stmt: FOR LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON optional_assign . RIGHT_PAREN stmt

    RIGHT_PAREN  shift, and go to state 170


state 169

   14 stmt: IF LEFT_PAREN expr RIGHT_PAREN stmt ELSE stmt .

    $default  reduce using rule 14 (stmt)


state 170

   16 stmt: FOR LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN . stmt

    error               shift, and go to state 70
    WHILE               shift, and go to state 71
    FOR                 shift, and go to state 72
    IF                  shift, and go to state 73
    RETURN              shift, and go to state 74
    SEMICOLON           shift, and go to state 75
    LEFT_CURLY_BRACKET  shift, and go to state 76
    ID                  shift, and go to state 77

    stmt  go to state 171
    assg  go to state 80


state 171

   16 stmt: FOR LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt .

    $default  reduce using rule 16 (stmt)
