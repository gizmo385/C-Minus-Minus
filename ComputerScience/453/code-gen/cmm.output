Terminals which are not used

   TEXT
   SPACE
   WITH_ELSE


Grammar

    0 $accept: prog $end

    1 prog: decl prog
    2     | func prog
    3     | epsilon

    4 decl: type var_decl_list SEMICOLON
    5     | type name_args_lists SEMICOLON
    6     | void name_args_lists SEMICOLON
    7     | extern type name_args_lists SEMICOLON
    8     | extern void name_args_lists SEMICOLON
    9     | error SEMICOLON

   10 extern: EXTERN

   11 func_header: type ID LEFT_PAREN param_types RIGHT_PAREN
   12            | void ID LEFT_PAREN param_types RIGHT_PAREN

   13 func: func_header LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET

   14 stmt: IF LEFT_PAREN expr RIGHT_PAREN stmt
   15     | IF LEFT_PAREN expr RIGHT_PAREN stmt ELSE stmt
   16     | WHILE LEFT_PAREN expr RIGHT_PAREN stmt
   17     | FOR LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt
   18     | RETURN optional_expr SEMICOLON
   19     | assg SEMICOLON
   20     | ID LEFT_PAREN expr_list RIGHT_PAREN SEMICOLON
   21     | LEFT_CURLY_BRACKET stmt_list RIGHT_CURLY_BRACKET
   22     | SEMICOLON
   23     | error SEMICOLON
   24     | error RIGHT_CURLY_BRACKET

   25 expr: MINUS expr
   26     | NOT expr
   27     | expr ADD expr
   28     | expr MINUS expr
   29     | expr AND expr
   30     | expr OR expr
   31     | expr MUL expr
   32     | expr DIV expr
   33     | expr EQ expr
   34     | expr NEQ expr
   35     | expr GTE expr
   36     | expr LTE expr
   37     | expr GT expr
   38     | expr LT expr
   39     | ID LEFT_PAREN expr_list RIGHT_PAREN
   40     | ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   41     | ID
   42     | LEFT_PAREN expr RIGHT_PAREN
   43     | INTCON
   44     | CHARCON
   45     | STRINGCON
   46     | error

   47 name_args_lists: ID LEFT_PAREN param_types RIGHT_PAREN
   48                | name_args_lists COMMA ID LEFT_PAREN param_types RIGHT_PAREN

   49 var_decl: ID
   50         | ID LEFT_SQUARE_BRACKET INTCON RIGHT_SQUARE_BRACKET

   51 var_decl_list: var_decl
   52              | var_decl_list COMMA var_decl
   53              | epsilon

   54 void: VOID

   55 type: CHAR
   56     | INT

   57 param_types: void
   58            | non_void_param_type
   59            | param_types_list COMMA non_void_param_type

   60 non_void_param_type: type ID
   61                    | type ID LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET

   62 param_types_list: non_void_param_type
   63                 | param_types_list COMMA non_void_param_type
   64                 | epsilon

   65 optional_var_decl_list: type var_decl_list SEMICOLON optional_var_decl_list
   66                       | epsilon

   67 optional_assign: assg
   68                | error
   69                | epsilon

   70 optional_expr: expr
   71              | epsilon

   72 stmt_list: stmt stmt_list
   73          | epsilon

   74 assg: ID ASSIGN expr
   75     | ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET ASSIGN expr

   76 expr_list: optional_expr
   77          | expr_list COMMA expr

   78 epsilon: /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256) 9 23 24 46 68
WHILE (258) 16
FOR (259) 17
INT (260) 56
CHAR (261) 55
VOID (262) 54
IF (263) 14 15
ELSE (264) 15
EXTERN (265) 10
RETURN (266) 18
COMMA (267) 48 52 59 63 77
SEMICOLON (268) 4 5 6 7 8 9 17 18 19 20 22 23 65
LEFT_PAREN (269) 11 12 14 15 16 17 20 39 42 47 48
RIGHT_PAREN (270) 11 12 14 15 16 17 20 39 42 47 48
LEFT_SQUARE_BRACKET (271) 40 50 61 75
RIGHT_SQUARE_BRACKET (272) 40 50 61 75
LEFT_CURLY_BRACKET (273) 13 21
RIGHT_CURLY_BRACKET (274) 13 21 24
EQ (275) 33
NEQ (276) 34
LTE (277) 36
LT (278) 38
GT (279) 37
GTE (280) 35
NOT (281) 26
AND (282) 29
OR (283) 30
ADD (284) 27
MINUS (285) 25 28
MUL (286) 31
DIV (287) 32
ASSIGN (288) 74 75
INTCON (289) 43 50
CHARCON (290) 44
STRINGCON (291) 45
ID (292) 11 12 20 39 40 41 47 48 49 50 60 61 74 75
TEXT (293)
SPACE (294)
WITHOUT_ELSE (295)
WITH_ELSE (296)
equality_op (297)
relop (298)
add_sub (299)
mul_div (300)
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
prog (48)
    on left: 1 2 3, on right: 0 1 2
decl (49)
    on left: 4 5 6 7 8 9, on right: 1
extern (50)
    on left: 10, on right: 7 8
func_header (51)
    on left: 11 12, on right: 13
func (52)
    on left: 13, on right: 2
stmt (53)
    on left: 14 15 16 17 18 19 20 21 22 23 24, on right: 14 15 16 17
    72
expr (54)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 45 46, on right: 14 15 16 25 26 27 28 29 30 31 32 33 34 35
    36 37 38 40 42 70 74 75 77
name_args_lists (55)
    on left: 47 48, on right: 5 6 7 8 48
var_decl (56)
    on left: 49 50, on right: 51 52
var_decl_list (57)
    on left: 51 52 53, on right: 4 52 65
void (58)
    on left: 54, on right: 6 8 12 57
type (59)
    on left: 55 56, on right: 4 5 7 11 60 61 65
param_types (60)
    on left: 57 58 59, on right: 11 12 47 48
non_void_param_type (61)
    on left: 60 61, on right: 58 59 62 63
param_types_list (62)
    on left: 62 63 64, on right: 59 63
optional_var_decl_list (63)
    on left: 65 66, on right: 13 65
optional_assign (64)
    on left: 67 68 69, on right: 17
optional_expr (65)
    on left: 70 71, on right: 17 18 76
stmt_list (66)
    on left: 72 73, on right: 13 21 72
assg (67)
    on left: 74 75, on right: 19 67
expr_list (68)
    on left: 76 77, on right: 20 39 77
epsilon (69)
    on left: 78, on right: 3 53 64 66 69 71 73


state 0

    0 $accept: . prog $end

    error   shift, and go to state 1
    INT     shift, and go to state 2
    CHAR    shift, and go to state 3
    VOID    shift, and go to state 4
    EXTERN  shift, and go to state 5

    $end  reduce using rule 78 (epsilon)

    prog         go to state 6
    decl         go to state 7
    extern       go to state 8
    func_header  go to state 9
    func         go to state 10
    void         go to state 11
    type         go to state 12
    epsilon      go to state 13


state 1

    9 decl: error . SEMICOLON

    SEMICOLON  shift, and go to state 14


state 2

   56 type: INT .

    $default  reduce using rule 56 (type)


state 3

   55 type: CHAR .

    $default  reduce using rule 55 (type)


state 4

   54 void: VOID .

    $default  reduce using rule 54 (void)


state 5

   10 extern: EXTERN .

    $default  reduce using rule 10 (extern)


state 6

    0 $accept: prog . $end

    $end  shift, and go to state 15


state 7

    1 prog: decl . prog

    error   shift, and go to state 1
    INT     shift, and go to state 2
    CHAR    shift, and go to state 3
    VOID    shift, and go to state 4
    EXTERN  shift, and go to state 5

    $end  reduce using rule 78 (epsilon)

    prog         go to state 16
    decl         go to state 7
    extern       go to state 8
    func_header  go to state 9
    func         go to state 10
    void         go to state 11
    type         go to state 12
    epsilon      go to state 13


state 8

    7 decl: extern . type name_args_lists SEMICOLON
    8     | extern . void name_args_lists SEMICOLON

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3
    VOID  shift, and go to state 4

    void  go to state 17
    type  go to state 18


state 9

   13 func: func_header . LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 19


state 10

    2 prog: func . prog

    error   shift, and go to state 1
    INT     shift, and go to state 2
    CHAR    shift, and go to state 3
    VOID    shift, and go to state 4
    EXTERN  shift, and go to state 5

    $end  reduce using rule 78 (epsilon)

    prog         go to state 20
    decl         go to state 7
    extern       go to state 8
    func_header  go to state 9
    func         go to state 10
    void         go to state 11
    type         go to state 12
    epsilon      go to state 13


state 11

    6 decl: void . name_args_lists SEMICOLON
   12 func_header: void . ID LEFT_PAREN param_types RIGHT_PAREN

    ID  shift, and go to state 21

    name_args_lists  go to state 22


state 12

    4 decl: type . var_decl_list SEMICOLON
    5     | type . name_args_lists SEMICOLON
   11 func_header: type . ID LEFT_PAREN param_types RIGHT_PAREN

    ID  shift, and go to state 23

    $default  reduce using rule 78 (epsilon)

    name_args_lists  go to state 24
    var_decl         go to state 25
    var_decl_list    go to state 26
    epsilon          go to state 27


state 13

    3 prog: epsilon .

    $default  reduce using rule 3 (prog)


state 14

    9 decl: error SEMICOLON .

    $default  reduce using rule 9 (decl)


state 15

    0 $accept: prog $end .

    $default  accept


state 16

    1 prog: decl prog .

    $default  reduce using rule 1 (prog)


state 17

    8 decl: extern void . name_args_lists SEMICOLON

    ID  shift, and go to state 28

    name_args_lists  go to state 29


state 18

    7 decl: extern type . name_args_lists SEMICOLON

    ID  shift, and go to state 28

    name_args_lists  go to state 30


state 19

   13 func: func_header LEFT_CURLY_BRACKET . optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 78 (epsilon)

    type                    go to state 31
    optional_var_decl_list  go to state 32
    epsilon                 go to state 33


state 20

    2 prog: func prog .

    $default  reduce using rule 2 (prog)


state 21

   12 func_header: void ID . LEFT_PAREN param_types RIGHT_PAREN
   47 name_args_lists: ID . LEFT_PAREN param_types RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 34


state 22

    6 decl: void name_args_lists . SEMICOLON
   48 name_args_lists: name_args_lists . COMMA ID LEFT_PAREN param_types RIGHT_PAREN

    COMMA      shift, and go to state 35
    SEMICOLON  shift, and go to state 36


state 23

   11 func_header: type ID . LEFT_PAREN param_types RIGHT_PAREN
   47 name_args_lists: ID . LEFT_PAREN param_types RIGHT_PAREN
   49 var_decl: ID .
   50         | ID . LEFT_SQUARE_BRACKET INTCON RIGHT_SQUARE_BRACKET

    LEFT_PAREN           shift, and go to state 37
    LEFT_SQUARE_BRACKET  shift, and go to state 38

    $default  reduce using rule 49 (var_decl)


state 24

    5 decl: type name_args_lists . SEMICOLON
   48 name_args_lists: name_args_lists . COMMA ID LEFT_PAREN param_types RIGHT_PAREN

    COMMA      shift, and go to state 35
    SEMICOLON  shift, and go to state 39


state 25

   51 var_decl_list: var_decl .

    $default  reduce using rule 51 (var_decl_list)


state 26

    4 decl: type var_decl_list . SEMICOLON
   52 var_decl_list: var_decl_list . COMMA var_decl

    COMMA      shift, and go to state 40
    SEMICOLON  shift, and go to state 41


state 27

   53 var_decl_list: epsilon .

    $default  reduce using rule 53 (var_decl_list)


state 28

   47 name_args_lists: ID . LEFT_PAREN param_types RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 42


state 29

    8 decl: extern void name_args_lists . SEMICOLON
   48 name_args_lists: name_args_lists . COMMA ID LEFT_PAREN param_types RIGHT_PAREN

    COMMA      shift, and go to state 35
    SEMICOLON  shift, and go to state 43


state 30

    7 decl: extern type name_args_lists . SEMICOLON
   48 name_args_lists: name_args_lists . COMMA ID LEFT_PAREN param_types RIGHT_PAREN

    COMMA      shift, and go to state 35
    SEMICOLON  shift, and go to state 44


state 31

   65 optional_var_decl_list: type . var_decl_list SEMICOLON optional_var_decl_list

    ID  shift, and go to state 45

    $default  reduce using rule 78 (epsilon)

    var_decl       go to state 25
    var_decl_list  go to state 46
    epsilon        go to state 27


state 32

   13 func: func_header LEFT_CURLY_BRACKET optional_var_decl_list . stmt_list RIGHT_CURLY_BRACKET

    error               shift, and go to state 47
    WHILE               shift, and go to state 48
    FOR                 shift, and go to state 49
    IF                  shift, and go to state 50
    RETURN              shift, and go to state 51
    SEMICOLON           shift, and go to state 52
    LEFT_CURLY_BRACKET  shift, and go to state 53
    ID                  shift, and go to state 54

    RIGHT_CURLY_BRACKET  reduce using rule 78 (epsilon)

    stmt       go to state 55
    stmt_list  go to state 56
    assg       go to state 57
    epsilon    go to state 58


state 33

   66 optional_var_decl_list: epsilon .

    $default  reduce using rule 66 (optional_var_decl_list)


state 34

   12 func_header: void ID LEFT_PAREN . param_types RIGHT_PAREN
   47 name_args_lists: ID LEFT_PAREN . param_types RIGHT_PAREN

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3
    VOID  shift, and go to state 4

    $default  reduce using rule 78 (epsilon)

    void                 go to state 59
    type                 go to state 60
    param_types          go to state 61
    non_void_param_type  go to state 62
    param_types_list     go to state 63
    epsilon              go to state 64


state 35

   48 name_args_lists: name_args_lists COMMA . ID LEFT_PAREN param_types RIGHT_PAREN

    ID  shift, and go to state 65


state 36

    6 decl: void name_args_lists SEMICOLON .

    $default  reduce using rule 6 (decl)


state 37

   11 func_header: type ID LEFT_PAREN . param_types RIGHT_PAREN
   47 name_args_lists: ID LEFT_PAREN . param_types RIGHT_PAREN

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3
    VOID  shift, and go to state 4

    $default  reduce using rule 78 (epsilon)

    void                 go to state 59
    type                 go to state 60
    param_types          go to state 66
    non_void_param_type  go to state 62
    param_types_list     go to state 63
    epsilon              go to state 64


state 38

   50 var_decl: ID LEFT_SQUARE_BRACKET . INTCON RIGHT_SQUARE_BRACKET

    INTCON  shift, and go to state 67


state 39

    5 decl: type name_args_lists SEMICOLON .

    $default  reduce using rule 5 (decl)


state 40

   52 var_decl_list: var_decl_list COMMA . var_decl

    ID  shift, and go to state 45

    var_decl  go to state 68


state 41

    4 decl: type var_decl_list SEMICOLON .

    $default  reduce using rule 4 (decl)


state 42

   47 name_args_lists: ID LEFT_PAREN . param_types RIGHT_PAREN

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3
    VOID  shift, and go to state 4

    $default  reduce using rule 78 (epsilon)

    void                 go to state 59
    type                 go to state 60
    param_types          go to state 69
    non_void_param_type  go to state 62
    param_types_list     go to state 63
    epsilon              go to state 64


state 43

    8 decl: extern void name_args_lists SEMICOLON .

    $default  reduce using rule 8 (decl)


state 44

    7 decl: extern type name_args_lists SEMICOLON .

    $default  reduce using rule 7 (decl)


state 45

   49 var_decl: ID .
   50         | ID . LEFT_SQUARE_BRACKET INTCON RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 38

    $default  reduce using rule 49 (var_decl)


state 46

   52 var_decl_list: var_decl_list . COMMA var_decl
   65 optional_var_decl_list: type var_decl_list . SEMICOLON optional_var_decl_list

    COMMA      shift, and go to state 40
    SEMICOLON  shift, and go to state 70


state 47

   23 stmt: error . SEMICOLON
   24     | error . RIGHT_CURLY_BRACKET

    SEMICOLON            shift, and go to state 71
    RIGHT_CURLY_BRACKET  shift, and go to state 72


state 48

   16 stmt: WHILE . LEFT_PAREN expr RIGHT_PAREN stmt

    LEFT_PAREN  shift, and go to state 73


state 49

   17 stmt: FOR . LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt

    LEFT_PAREN  shift, and go to state 74


state 50

   14 stmt: IF . LEFT_PAREN expr RIGHT_PAREN stmt
   15     | IF . LEFT_PAREN expr RIGHT_PAREN stmt ELSE stmt

    LEFT_PAREN  shift, and go to state 75


state 51

   18 stmt: RETURN . optional_expr SEMICOLON

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    SEMICOLON  reduce using rule 78 (epsilon)

    expr           go to state 84
    optional_expr  go to state 85
    epsilon        go to state 86


state 52

   22 stmt: SEMICOLON .

    $default  reduce using rule 22 (stmt)


state 53

   21 stmt: LEFT_CURLY_BRACKET . stmt_list RIGHT_CURLY_BRACKET

    error               shift, and go to state 47
    WHILE               shift, and go to state 48
    FOR                 shift, and go to state 49
    IF                  shift, and go to state 50
    RETURN              shift, and go to state 51
    SEMICOLON           shift, and go to state 52
    LEFT_CURLY_BRACKET  shift, and go to state 53
    ID                  shift, and go to state 54

    RIGHT_CURLY_BRACKET  reduce using rule 78 (epsilon)

    stmt       go to state 55
    stmt_list  go to state 87
    assg       go to state 57
    epsilon    go to state 58


state 54

   20 stmt: ID . LEFT_PAREN expr_list RIGHT_PAREN SEMICOLON
   74 assg: ID . ASSIGN expr
   75     | ID . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET ASSIGN expr

    LEFT_PAREN           shift, and go to state 88
    LEFT_SQUARE_BRACKET  shift, and go to state 89
    ASSIGN               shift, and go to state 90


state 55

   72 stmt_list: stmt . stmt_list

    error               shift, and go to state 47
    WHILE               shift, and go to state 48
    FOR                 shift, and go to state 49
    IF                  shift, and go to state 50
    RETURN              shift, and go to state 51
    SEMICOLON           shift, and go to state 52
    LEFT_CURLY_BRACKET  shift, and go to state 53
    ID                  shift, and go to state 54

    RIGHT_CURLY_BRACKET  reduce using rule 78 (epsilon)

    stmt       go to state 55
    stmt_list  go to state 91
    assg       go to state 57
    epsilon    go to state 58


state 56

   13 func: func_header LEFT_CURLY_BRACKET optional_var_decl_list stmt_list . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 92


state 57

   19 stmt: assg . SEMICOLON

    SEMICOLON  shift, and go to state 93


state 58

   73 stmt_list: epsilon .

    $default  reduce using rule 73 (stmt_list)


state 59

   57 param_types: void .

    $default  reduce using rule 57 (param_types)


state 60

   60 non_void_param_type: type . ID
   61                    | type . ID LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET

    ID  shift, and go to state 94


state 61

   12 func_header: void ID LEFT_PAREN param_types . RIGHT_PAREN
   47 name_args_lists: ID LEFT_PAREN param_types . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 95


state 62

   58 param_types: non_void_param_type .
   62 param_types_list: non_void_param_type .

    COMMA     reduce using rule 62 (param_types_list)
    $default  reduce using rule 58 (param_types)


state 63

   59 param_types: param_types_list . COMMA non_void_param_type
   63 param_types_list: param_types_list . COMMA non_void_param_type

    COMMA  shift, and go to state 96


state 64

   64 param_types_list: epsilon .

    $default  reduce using rule 64 (param_types_list)


state 65

   48 name_args_lists: name_args_lists COMMA ID . LEFT_PAREN param_types RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 97


state 66

   11 func_header: type ID LEFT_PAREN param_types . RIGHT_PAREN
   47 name_args_lists: ID LEFT_PAREN param_types . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 98


state 67

   50 var_decl: ID LEFT_SQUARE_BRACKET INTCON . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 99


state 68

   52 var_decl_list: var_decl_list COMMA var_decl .

    $default  reduce using rule 52 (var_decl_list)


state 69

   47 name_args_lists: ID LEFT_PAREN param_types . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 100


state 70

   65 optional_var_decl_list: type var_decl_list SEMICOLON . optional_var_decl_list

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 78 (epsilon)

    type                    go to state 31
    optional_var_decl_list  go to state 101
    epsilon                 go to state 33


state 71

   23 stmt: error SEMICOLON .

    $default  reduce using rule 23 (stmt)


state 72

   24 stmt: error RIGHT_CURLY_BRACKET .

    $default  reduce using rule 24 (stmt)


state 73

   16 stmt: WHILE LEFT_PAREN . expr RIGHT_PAREN stmt

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 102


state 74

   17 stmt: FOR LEFT_PAREN . optional_assign SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt

    error  shift, and go to state 103
    ID     shift, and go to state 104

    SEMICOLON  reduce using rule 78 (epsilon)

    optional_assign  go to state 105
    assg             go to state 106
    epsilon          go to state 107


state 75

   14 stmt: IF LEFT_PAREN . expr RIGHT_PAREN stmt
   15     | IF LEFT_PAREN . expr RIGHT_PAREN stmt ELSE stmt

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 108


state 76

   46 expr: error .

    $default  reduce using rule 46 (expr)


state 77

   42 expr: LEFT_PAREN . expr RIGHT_PAREN

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 109


state 78

   26 expr: NOT . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 110


state 79

   25 expr: MINUS . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 111


state 80

   43 expr: INTCON .

    $default  reduce using rule 43 (expr)


state 81

   44 expr: CHARCON .

    $default  reduce using rule 44 (expr)


state 82

   45 expr: STRINGCON .

    $default  reduce using rule 45 (expr)


state 83

   39 expr: ID . LEFT_PAREN expr_list RIGHT_PAREN
   40     | ID . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   41     | ID .

    LEFT_PAREN           shift, and go to state 112
    LEFT_SQUARE_BRACKET  shift, and go to state 113

    $default  reduce using rule 41 (expr)


state 84

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr
   70 optional_expr: expr .

    EQ     shift, and go to state 114
    NEQ    shift, and go to state 115
    LTE    shift, and go to state 116
    LT     shift, and go to state 117
    GT     shift, and go to state 118
    GTE    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 70 (optional_expr)


state 85

   18 stmt: RETURN optional_expr . SEMICOLON

    SEMICOLON  shift, and go to state 126


state 86

   71 optional_expr: epsilon .

    $default  reduce using rule 71 (optional_expr)


state 87

   21 stmt: LEFT_CURLY_BRACKET stmt_list . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 127


state 88

   20 stmt: ID LEFT_PAREN . expr_list RIGHT_PAREN SEMICOLON

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    COMMA        reduce using rule 78 (epsilon)
    RIGHT_PAREN  reduce using rule 78 (epsilon)

    expr           go to state 84
    optional_expr  go to state 128
    expr_list      go to state 129
    epsilon        go to state 86


state 89

   75 assg: ID LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET ASSIGN expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 130


state 90

   74 assg: ID ASSIGN . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 131


state 91

   72 stmt_list: stmt stmt_list .

    $default  reduce using rule 72 (stmt_list)


state 92

   13 func: func_header LEFT_CURLY_BRACKET optional_var_decl_list stmt_list RIGHT_CURLY_BRACKET .

    $default  reduce using rule 13 (func)


state 93

   19 stmt: assg SEMICOLON .

    $default  reduce using rule 19 (stmt)


state 94

   60 non_void_param_type: type ID .
   61                    | type ID . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 132

    $default  reduce using rule 60 (non_void_param_type)


state 95

   12 func_header: void ID LEFT_PAREN param_types RIGHT_PAREN .
   47 name_args_lists: ID LEFT_PAREN param_types RIGHT_PAREN .

    LEFT_CURLY_BRACKET  reduce using rule 12 (func_header)
    $default            reduce using rule 47 (name_args_lists)


state 96

   59 param_types: param_types_list COMMA . non_void_param_type
   63 param_types_list: param_types_list COMMA . non_void_param_type

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    type                 go to state 60
    non_void_param_type  go to state 133


state 97

   48 name_args_lists: name_args_lists COMMA ID LEFT_PAREN . param_types RIGHT_PAREN

    INT   shift, and go to state 2
    CHAR  shift, and go to state 3
    VOID  shift, and go to state 4

    $default  reduce using rule 78 (epsilon)

    void                 go to state 59
    type                 go to state 60
    param_types          go to state 134
    non_void_param_type  go to state 62
    param_types_list     go to state 63
    epsilon              go to state 64


state 98

   11 func_header: type ID LEFT_PAREN param_types RIGHT_PAREN .
   47 name_args_lists: ID LEFT_PAREN param_types RIGHT_PAREN .

    LEFT_CURLY_BRACKET  reduce using rule 11 (func_header)
    $default            reduce using rule 47 (name_args_lists)


state 99

   50 var_decl: ID LEFT_SQUARE_BRACKET INTCON RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 50 (var_decl)


state 100

   47 name_args_lists: ID LEFT_PAREN param_types RIGHT_PAREN .

    $default  reduce using rule 47 (name_args_lists)


state 101

   65 optional_var_decl_list: type var_decl_list SEMICOLON optional_var_decl_list .

    $default  reduce using rule 65 (optional_var_decl_list)


state 102

   16 stmt: WHILE LEFT_PAREN expr . RIGHT_PAREN stmt
   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    RIGHT_PAREN  shift, and go to state 135
    EQ           shift, and go to state 114
    NEQ          shift, and go to state 115
    LTE          shift, and go to state 116
    LT           shift, and go to state 117
    GT           shift, and go to state 118
    GTE          shift, and go to state 119
    AND          shift, and go to state 120
    OR           shift, and go to state 121
    ADD          shift, and go to state 122
    MINUS        shift, and go to state 123
    MUL          shift, and go to state 124
    DIV          shift, and go to state 125


state 103

   68 optional_assign: error .

    $default  reduce using rule 68 (optional_assign)


state 104

   74 assg: ID . ASSIGN expr
   75     | ID . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET ASSIGN expr

    LEFT_SQUARE_BRACKET  shift, and go to state 89
    ASSIGN               shift, and go to state 90


state 105

   17 stmt: FOR LEFT_PAREN optional_assign . SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt

    SEMICOLON  shift, and go to state 136


state 106

   67 optional_assign: assg .

    $default  reduce using rule 67 (optional_assign)


state 107

   69 optional_assign: epsilon .

    $default  reduce using rule 69 (optional_assign)


state 108

   14 stmt: IF LEFT_PAREN expr . RIGHT_PAREN stmt
   15     | IF LEFT_PAREN expr . RIGHT_PAREN stmt ELSE stmt
   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    RIGHT_PAREN  shift, and go to state 137
    EQ           shift, and go to state 114
    NEQ          shift, and go to state 115
    LTE          shift, and go to state 116
    LT           shift, and go to state 117
    GT           shift, and go to state 118
    GTE          shift, and go to state 119
    AND          shift, and go to state 120
    OR           shift, and go to state 121
    ADD          shift, and go to state 122
    MINUS        shift, and go to state 123
    MUL          shift, and go to state 124
    DIV          shift, and go to state 125


state 109

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr
   42     | LEFT_PAREN expr . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 138
    EQ           shift, and go to state 114
    NEQ          shift, and go to state 115
    LTE          shift, and go to state 116
    LT           shift, and go to state 117
    GT           shift, and go to state 118
    GTE          shift, and go to state 119
    AND          shift, and go to state 120
    OR           shift, and go to state 121
    ADD          shift, and go to state 122
    MINUS        shift, and go to state 123
    MUL          shift, and go to state 124
    DIV          shift, and go to state 125


state 110

   26 expr: NOT expr .
   27     | expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    $default  reduce using rule 26 (expr)


state 111

   25 expr: MINUS expr .
   27     | expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    $default  reduce using rule 25 (expr)


state 112

   39 expr: ID LEFT_PAREN . expr_list RIGHT_PAREN

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    COMMA        reduce using rule 78 (epsilon)
    RIGHT_PAREN  reduce using rule 78 (epsilon)

    expr           go to state 84
    optional_expr  go to state 128
    expr_list      go to state 139
    epsilon        go to state 86


state 113

   40 expr: ID LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 140


state 114

   33 expr: expr EQ . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 141


state 115

   34 expr: expr NEQ . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 142


state 116

   36 expr: expr LTE . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 143


state 117

   38 expr: expr LT . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 144


state 118

   37 expr: expr GT . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 145


state 119

   35 expr: expr GTE . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 146


state 120

   29 expr: expr AND . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 147


state 121

   30 expr: expr OR . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 148


state 122

   27 expr: expr ADD . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 149


state 123

   28 expr: expr MINUS . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 150


state 124

   31 expr: expr MUL . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 151


state 125

   32 expr: expr DIV . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 152


state 126

   18 stmt: RETURN optional_expr SEMICOLON .

    $default  reduce using rule 18 (stmt)


state 127

   21 stmt: LEFT_CURLY_BRACKET stmt_list RIGHT_CURLY_BRACKET .

    $default  reduce using rule 21 (stmt)


state 128

   76 expr_list: optional_expr .

    $default  reduce using rule 76 (expr_list)


state 129

   20 stmt: ID LEFT_PAREN expr_list . RIGHT_PAREN SEMICOLON
   77 expr_list: expr_list . COMMA expr

    COMMA        shift, and go to state 153
    RIGHT_PAREN  shift, and go to state 154


state 130

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr
   75 assg: ID LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET ASSIGN expr

    RIGHT_SQUARE_BRACKET  shift, and go to state 155
    EQ                    shift, and go to state 114
    NEQ                   shift, and go to state 115
    LTE                   shift, and go to state 116
    LT                    shift, and go to state 117
    GT                    shift, and go to state 118
    GTE                   shift, and go to state 119
    AND                   shift, and go to state 120
    OR                    shift, and go to state 121
    ADD                   shift, and go to state 122
    MINUS                 shift, and go to state 123
    MUL                   shift, and go to state 124
    DIV                   shift, and go to state 125


state 131

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr
   74 assg: ID ASSIGN expr .

    EQ     shift, and go to state 114
    NEQ    shift, and go to state 115
    LTE    shift, and go to state 116
    LT     shift, and go to state 117
    GT     shift, and go to state 118
    GTE    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 74 (assg)


state 132

   61 non_void_param_type: type ID LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 156


state 133

   59 param_types: param_types_list COMMA non_void_param_type .
   63 param_types_list: param_types_list COMMA non_void_param_type .

    COMMA     reduce using rule 63 (param_types_list)
    $default  reduce using rule 59 (param_types)


state 134

   48 name_args_lists: name_args_lists COMMA ID LEFT_PAREN param_types . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 157


state 135

   16 stmt: WHILE LEFT_PAREN expr RIGHT_PAREN . stmt

    error               shift, and go to state 47
    WHILE               shift, and go to state 48
    FOR                 shift, and go to state 49
    IF                  shift, and go to state 50
    RETURN              shift, and go to state 51
    SEMICOLON           shift, and go to state 52
    LEFT_CURLY_BRACKET  shift, and go to state 53
    ID                  shift, and go to state 54

    stmt  go to state 158
    assg  go to state 57


state 136

   17 stmt: FOR LEFT_PAREN optional_assign SEMICOLON . optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    SEMICOLON  reduce using rule 78 (epsilon)

    expr           go to state 84
    optional_expr  go to state 159
    epsilon        go to state 86


state 137

   14 stmt: IF LEFT_PAREN expr RIGHT_PAREN . stmt
   15     | IF LEFT_PAREN expr RIGHT_PAREN . stmt ELSE stmt

    error               shift, and go to state 47
    WHILE               shift, and go to state 48
    FOR                 shift, and go to state 49
    IF                  shift, and go to state 50
    RETURN              shift, and go to state 51
    SEMICOLON           shift, and go to state 52
    LEFT_CURLY_BRACKET  shift, and go to state 53
    ID                  shift, and go to state 54

    stmt  go to state 160
    assg  go to state 57


state 138

   42 expr: LEFT_PAREN expr RIGHT_PAREN .

    $default  reduce using rule 42 (expr)


state 139

   39 expr: ID LEFT_PAREN expr_list . RIGHT_PAREN
   77 expr_list: expr_list . COMMA expr

    COMMA        shift, and go to state 153
    RIGHT_PAREN  shift, and go to state 161


state 140

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr
   40     | ID LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 162
    EQ                    shift, and go to state 114
    NEQ                   shift, and go to state 115
    LTE                   shift, and go to state 116
    LT                    shift, and go to state 117
    GT                    shift, and go to state 118
    GTE                   shift, and go to state 119
    AND                   shift, and go to state 120
    OR                    shift, and go to state 121
    ADD                   shift, and go to state 122
    MINUS                 shift, and go to state 123
    MUL                   shift, and go to state 124
    DIV                   shift, and go to state 125


state 141

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   33     | expr EQ expr .
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    LTE    shift, and go to state 116
    LT     shift, and go to state 117
    GT     shift, and go to state 118
    GTE    shift, and go to state 119
    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 33 (expr)


state 142

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   34     | expr NEQ expr .
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    LTE    shift, and go to state 116
    LT     shift, and go to state 117
    GT     shift, and go to state 118
    GTE    shift, and go to state 119
    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 34 (expr)


state 143

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   36     | expr LTE expr .
   37     | expr . GT expr
   38     | expr . LT expr

    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 36 (expr)


state 144

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr
   38     | expr LT expr .

    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 38 (expr)


state 145

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   37     | expr GT expr .
   38     | expr . LT expr

    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 37 (expr)


state 146

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   35     | expr GTE expr .
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 35 (expr)


state 147

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   29     | expr AND expr .
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    EQ     shift, and go to state 114
    NEQ    shift, and go to state 115
    LTE    shift, and go to state 116
    LT     shift, and go to state 117
    GT     shift, and go to state 118
    GTE    shift, and go to state 119
    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 29 (expr)


state 148

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   30     | expr OR expr .
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    EQ     shift, and go to state 114
    NEQ    shift, and go to state 115
    LTE    shift, and go to state 116
    LT     shift, and go to state 117
    GT     shift, and go to state 118
    GTE    shift, and go to state 119
    AND    shift, and go to state 120
    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 30 (expr)


state 149

   27 expr: expr . ADD expr
   27     | expr ADD expr .
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    MUL  shift, and go to state 124
    DIV  shift, and go to state 125

    $default  reduce using rule 27 (expr)


state 150

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   28     | expr MINUS expr .
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    MUL  shift, and go to state 124
    DIV  shift, and go to state 125

    $default  reduce using rule 28 (expr)


state 151

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   31     | expr MUL expr .
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    $default  reduce using rule 31 (expr)


state 152

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   32     | expr DIV expr .
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr

    $default  reduce using rule 32 (expr)


state 153

   77 expr_list: expr_list COMMA . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 163


state 154

   20 stmt: ID LEFT_PAREN expr_list RIGHT_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 164


state 155

   75 assg: ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET . ASSIGN expr

    ASSIGN  shift, and go to state 165


state 156

   61 non_void_param_type: type ID LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 61 (non_void_param_type)


state 157

   48 name_args_lists: name_args_lists COMMA ID LEFT_PAREN param_types RIGHT_PAREN .

    $default  reduce using rule 48 (name_args_lists)


state 158

   16 stmt: WHILE LEFT_PAREN expr RIGHT_PAREN stmt .

    $default  reduce using rule 16 (stmt)


state 159

   17 stmt: FOR LEFT_PAREN optional_assign SEMICOLON optional_expr . SEMICOLON optional_assign RIGHT_PAREN stmt

    SEMICOLON  shift, and go to state 166


state 160

   14 stmt: IF LEFT_PAREN expr RIGHT_PAREN stmt .
   15     | IF LEFT_PAREN expr RIGHT_PAREN stmt . ELSE stmt

    ELSE  shift, and go to state 167

    $default  reduce using rule 14 (stmt)


state 161

   39 expr: ID LEFT_PAREN expr_list RIGHT_PAREN .

    $default  reduce using rule 39 (expr)


state 162

   40 expr: ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 40 (expr)


state 163

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr
   77 expr_list: expr_list COMMA expr .

    EQ     shift, and go to state 114
    NEQ    shift, and go to state 115
    LTE    shift, and go to state 116
    LT     shift, and go to state 117
    GT     shift, and go to state 118
    GTE    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 77 (expr_list)


state 164

   20 stmt: ID LEFT_PAREN expr_list RIGHT_PAREN SEMICOLON .

    $default  reduce using rule 20 (stmt)


state 165

   75 assg: ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET ASSIGN . expr

    error       shift, and go to state 76
    LEFT_PAREN  shift, and go to state 77
    NOT         shift, and go to state 78
    MINUS       shift, and go to state 79
    INTCON      shift, and go to state 80
    CHARCON     shift, and go to state 81
    STRINGCON   shift, and go to state 82
    ID          shift, and go to state 83

    expr  go to state 168


state 166

   17 stmt: FOR LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON . optional_assign RIGHT_PAREN stmt

    error  shift, and go to state 103
    ID     shift, and go to state 104

    RIGHT_PAREN  reduce using rule 78 (epsilon)

    optional_assign  go to state 169
    assg             go to state 106
    epsilon          go to state 107


state 167

   15 stmt: IF LEFT_PAREN expr RIGHT_PAREN stmt ELSE . stmt

    error               shift, and go to state 47
    WHILE               shift, and go to state 48
    FOR                 shift, and go to state 49
    IF                  shift, and go to state 50
    RETURN              shift, and go to state 51
    SEMICOLON           shift, and go to state 52
    LEFT_CURLY_BRACKET  shift, and go to state 53
    ID                  shift, and go to state 54

    stmt  go to state 170
    assg  go to state 57


state 168

   27 expr: expr . ADD expr
   28     | expr . MINUS expr
   29     | expr . AND expr
   30     | expr . OR expr
   31     | expr . MUL expr
   32     | expr . DIV expr
   33     | expr . EQ expr
   34     | expr . NEQ expr
   35     | expr . GTE expr
   36     | expr . LTE expr
   37     | expr . GT expr
   38     | expr . LT expr
   75 assg: ID LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET ASSIGN expr .

    EQ     shift, and go to state 114
    NEQ    shift, and go to state 115
    LTE    shift, and go to state 116
    LT     shift, and go to state 117
    GT     shift, and go to state 118
    GTE    shift, and go to state 119
    AND    shift, and go to state 120
    OR     shift, and go to state 121
    ADD    shift, and go to state 122
    MINUS  shift, and go to state 123
    MUL    shift, and go to state 124
    DIV    shift, and go to state 125

    $default  reduce using rule 75 (assg)


state 169

   17 stmt: FOR LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON optional_assign . RIGHT_PAREN stmt

    RIGHT_PAREN  shift, and go to state 171


state 170

   15 stmt: IF LEFT_PAREN expr RIGHT_PAREN stmt ELSE stmt .

    $default  reduce using rule 15 (stmt)


state 171

   17 stmt: FOR LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN . stmt

    error               shift, and go to state 47
    WHILE               shift, and go to state 48
    FOR                 shift, and go to state 49
    IF                  shift, and go to state 50
    RETURN              shift, and go to state 51
    SEMICOLON           shift, and go to state 52
    LEFT_CURLY_BRACKET  shift, and go to state 53
    ID                  shift, and go to state 54

    stmt  go to state 172
    assg  go to state 57


state 172

   17 stmt: FOR LEFT_PAREN optional_assign SEMICOLON optional_expr SEMICOLON optional_assign RIGHT_PAREN stmt .

    $default  reduce using rule 17 (stmt)
